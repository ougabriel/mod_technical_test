name: CI/CD Pipeline

on:
  push:
    branches:
      - dev    # Trigger when pushing to dev
  pull_request:
    branches:
      - dev    # Trigger when a pull request is opened against dev
      - main   # Trigger when a pull request is opened against main

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m venv venv
        venv/bin/pip install -r requirements.txt
        venv/bin/pip install pytest flake8

    - name: Check Python version
      run: |
        venv/bin/python --version

    - name: Run Unit Tests
      run: |
        venv/bin/python -m pytest

    - name: Lint Test with Flake8
      run: |
        venv/bin/python -m flake8 .

  #build and push image
  build_and_push_docker_image:
    needs: build_and_test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}  # Full commit hash
          SHORT_IMAGE_TAG=${IMAGE_TAG:0:6}  # Take the first 6 characters
          echo "Building Docker image with tag: $SHORT_IMAGE_TAG"
          
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${SHORT_IMAGE_TAG} .

      - name: Push Docker image to ECR
        run: |
          IMAGE_TAG=${{ github.sha }}  # Full commit hash
          SHORT_IMAGE_TAG=${IMAGE_TAG:0:6}  # Take the first 6 characters
          echo "Pushing Docker image with short tag: $SHORT_IMAGE_TAG"
          
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${SHORT_IMAGE_TAG}
  deploy_terraform_and_k8s:
    needs: build_and_push_docker_image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Check kubectl version
        run: |
          kubectl version --client

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialize Terraform
        run: terraform init

      - name: Select Terraform Workspace
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            terraform workspace select prod
          else
            terraform workspace select dev
          fi

      - name: Apply Terraform Changes
        run: terraform apply -auto-approve

      - name: Update Kubeconfig for EKS Cluster
        run: |
          CLUSTER_NAME=eks-cluster-${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
          aws eks update-kubeconfig --name $CLUSTER_NAME --region ${{ secrets.AWS_REGION }}

      - name: Deploy to Kubernetes
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Patch Deployment with new image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          kubectl set image deployment/my-app-deployment my-app-container=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${IMAGE_TAG}
